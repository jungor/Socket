#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<errno.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<unistd.h>
#define MAXSIZE 4096
#define MYPORT 6666
int main(int argc, char** argv) {
    int listenfd, connfd;
    sockaddr_in servaddr;
    sockaddr_in clieaddr;
    char buff[MAXSIZE];
    int n;
    if ((listenfd = socket(AF_INET, SOCK_STREAM, 0)) == -1 ){
        printf("create socket error: %s(errno: %d)\n",strerror(errno),errno);
        exit(1);
    }
    memset(&servaddr, 0, sizeof(servaddr));
    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
    servaddr.sin_port = htons(MYPORT);
    if (bind(listenfd, (sockaddr*)&servaddr, sizeof(servaddr)) == -1) {
        printf("bind socket error: %s(errno: %d)\n",strerror(errno),errno);
        exit(1);
    }

    if (listen(listenfd, 10) == -1) {
        printf("listen socket error: %s(errno: %d)\n",strerror(errno),errno);
        exit(1);
    }
    printf("======waiting for client's request======\n");
    connfd = 0;
    while(connfd == 0) {
        if ((connfd = accept(listenfd, (sockaddr*)NULL, NULL)) == -1) {
            printf("accept socket error: %s(errno: %d)",strerror(errno),errno);
            continue;
        }
    }
    while (1) {
        printf("Send to client:\n  ");
        char msg[MAXSIZE];
        fgets(msg, MAXSIZE, stdin);
        if (send(connfd, msg, strlen(msg), 0) == -1)
            perror("send error!");
        char buf[MAXSIZE];
        int rval= (connfd, buf, MAXSIZE);
        if (rval > 0) {
            buf[rval] = '\0';      
            printf("Receive from client:\n  ");
            printf("%s\n",buf);
        }
    }
    close(connfd);
    close(listenfd);
    return 0;
}

